# Before running this workflow, please refer to the instructions in the README file.
name: Create Custom SCP

on:
  push:
    branches:
      - main
#      - sivaVanga test
  # pull_request:
  #   branches:
  #     - main

env:
  AWS_REGION: us-east-1

permissions:
  id-token: write
  contents: read

jobs:
  MultiStepAWSOperations:
    name: Assume Role, Verify Identity, and Run Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: sudo apt-get install -y awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}


      - name: Verify role assumption with GetCallerIdentity
        run: aws sts get-caller-identity

      - name: Install Terraform
        run: |
          TERRAFORM_VERSION="1.4.0"
          curl -LO "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Run Terraform Commands
        run: |
          if [ -d "./root/create_SCP" ]; then
            cd ./root/create_SCP
            terraform init
            terraform plan -state="./root/create_SCP/terraform.tfstate" -var="policy_name=rax-Testing01-All-Base-SCps"
            #terraform apply -auto-approve -state="./root/create_SCP/terraform.tfstate" -var="policy_name=rax-Testing01-All-Base-SCps"
            #terraform destroy -auto-approve -state="./root/create_SCP/terraform.tfstate"
          else
            echo "Directory ./root/create_SCP does not exist."
            exit 1
          fi
